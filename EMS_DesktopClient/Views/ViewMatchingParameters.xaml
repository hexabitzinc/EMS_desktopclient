<UserControl x:Class="EMS_DesktopClient.Views.ViewMatchingParameters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EMS_DesktopClient.Views"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:Interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="628" d:DesignWidth="1024"
             MinHeight="628" MinWidth="1024"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:ValidationRules="clr-namespace:EMS_DesktopClient.ValidationRules"
             FlowDirection="LeftToRight"
             Padding="10">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="8*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="75"/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Header="Registering Parameters (Excel)" Margin="5,0" Style="{DynamicResource MaterialDesignGroupBox}" materialDesign:ShadowAssist.ShadowDepth="Depth3" BorderThickness="0">
                <DataGrid Grid.Row="0" Grid.Column="0" Margin="0 0 0 0" CanUserSortColumns="True" CanUserAddRows="False" IsReadOnly="False" CanUserDeleteRows="False" AutoGenerateColumns="False" materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" ItemsSource="{Binding ExcelParametersCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedExcelParameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <Interactivity:Interaction.Triggers>
                        <Interactivity:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding SelectExcelParametersCommand}"/>
                        </Interactivity:EventTrigger>
                    </Interactivity:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding DeleteSelectedExcelParameterCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <materialDesign:PackIcon Kind="Delete" Height="24" Width="24"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Name" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding ExcelParameterName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Type" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding ExcelParameterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <Button Grid.Row="0" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionDarkButton}" Height="24" Width="24" Margin="23,4,23,4" Command="{Binding ReadNewExcelFileCommand}">
                <materialDesign:PackIcon Kind="ReadMoreOutline" Height="25" Width="19" />
            </Button>
        </Grid>

        <Button Grid.Row="1" Grid.Column="1" Style="{StaticResource MaterialDesignRaisedButton}" Margin="5,0,5,0" Content="Match" Command="{Binding MatchingParametersCommand}"/>

        <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="8*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="75"/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Header="Parameters (Default)" Margin="5,0" Style="{DynamicResource MaterialDesignGroupBox}" materialDesign:ShadowAssist.ShadowDepth="Depth3" BorderThickness="0">
                <DataGrid Grid.Row="0" Grid.Column="0" Margin="0 0 0 0" CanUserSortColumns="True" CanUserAddRows="False" IsReadOnly="False" CanUserDeleteRows="False" AutoGenerateColumns="False" materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" ItemsSource="{Binding DefaultParametersCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedDefaultParameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <Interactivity:Interaction.Triggers>
                        <Interactivity:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding SelectDefaultParametersCommand}"/>
                        </Interactivity:EventTrigger>
                    </Interactivity:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding DeleteSelectedDefaultParameterCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <materialDesign:PackIcon Kind="Delete" Height="24" Width="24"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding PrintSelectedDefaultParameterCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <materialDesign:PackIcon Kind="LocalPrintShop" Height="24" Width="24"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Name" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding DefaultParameterName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Type" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding DefaultParameterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <Button Grid.Row="0" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionDarkButton}" Height="24" Width="24" Margin="23,4,23,4" Command="{Binding ResetDefaultParameterCommand}">
                <materialDesign:PackIcon Kind="ReadMoreOutline" Height="25" Width="19" />
            </Button>
        </Grid>

        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="8*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="75"/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Header="Matched Parameters" Margin="5,0" Style="{DynamicResource MaterialDesignGroupBox}" materialDesign:ShadowAssist.ShadowDepth="Depth3" BorderThickness="0">
                <DataGrid Grid.Row="0" Grid.Column="0" Margin="0 0 0 0" CanUserSortColumns="True" CanUserAddRows="False" IsReadOnly="False" CanUserDeleteRows="False" AutoGenerateColumns="False" materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" ItemsSource="{Binding MatchingParametersCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedMatchingParameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <Interactivity:Interaction.Triggers>
                        <Interactivity:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding SelectMatchingParametersCommand}"/>
                        </Interactivity:EventTrigger>
                    </Interactivity:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding DeleteSelectedMatchingParameterCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <materialDesign:PackIcon Kind="Delete" Height="24" Width="24"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding PrintSelectedMatchingParameterCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <materialDesign:PackIcon Kind="LocalPrintShop" Height="24" Width="24"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Name (Excel)" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding MatchedExcelParameterName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Type (Excel)" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding MatchedExcelParameterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Name (Default)" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding MatchedDefaultParameterName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <materialDesign:MaterialDataGridTextColumn Width="*" Header="Type (Default)" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" Binding="{Binding MatchedDefaultParameterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <Button Grid.Row="0" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionDarkButton}" Height="24" Width="24" Margin="23,4,23,4" Command="{Binding AddNewPrescriptionCommand}">
                <materialDesign:PackIcon Kind="Add" Height="25" Width="19" />
            </Button>
        </Grid>

        <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0" Grid.Column="1" Style="{StaticResource MaterialDesignRaisedButton}" Margin="10,0,10,0" Content="Save" Command="{Binding SaveCommand}"/>
            <Button Grid.Row="0" Grid.Column="2" Style="{StaticResource MaterialDesignRaisedButton}" Margin="10,0,10,0" Content="Save And Close" Command="{Binding SaveAndCloseCommand}"/>
        </Grid>
    </Grid>
</UserControl>
